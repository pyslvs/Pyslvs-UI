name: Deploy
on:
  push:
    branches: [ master ]
    tags: [ v* ]
jobs:
  python-build:
    strategy:
      matrix:
        pyver:
          - "3.8"
          - "3.9"
          - "3.10"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - run: git submodule update --init
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Build and test
        run: |
          python -m pip install -U pip setuptools wheel build
          python -m pip install -e .
      - if: matrix.pyver == '3.10' && matrix.os == 'ubuntu-latest'
        name: Pack (AppImage)
        run: ./scripts/appimage.sh
      - if: matrix.pyver == '3.10' && matrix.os != 'ubuntu-latest'
        name: Pack (PyInstaller)
        shell: bash
        run: ./scripts/pyinstaller.sh
      - if: matrix.pyver == '3.10' && matrix.os == 'ubuntu-latest'
        name: Upload artifact (AppImage)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-py${{ matrix.pyver }}
          path: out/*.AppImage
      - if: matrix.pyver == '3.10' && matrix.os != 'ubuntu-latest'
        name: Upload artifact (PyInstaller)
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-py${{ matrix.pyver }}
          path: dist/*.zip
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.pyver == '3.10' && matrix.os == 'ubuntu-latest'
        name: Upload binaries to release (AppImage)
        uses: softprops/action-gh-release@v1
        with:
          files: out/*.AppImage
      - if: startsWith(github.ref, 'refs/tags/v') && matrix.pyver == '3.10' && matrix.os != 'ubuntu-latest'
        name: Upload binaries to release (PyInstaller)
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
  
